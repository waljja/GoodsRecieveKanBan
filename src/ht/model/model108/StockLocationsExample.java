package ht.model.model108;

import java.util.ArrayList;
import java.util.List;

public class StockLocationsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public StockLocationsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(String value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(String value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(String value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(String value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLike(String value) {
            addCriterion("ID like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotLike(String value) {
            addCriterion("ID not like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<String> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<String> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andSortNumberIsNull() {
            addCriterion("SortNumber is null");
            return (Criteria) this;
        }

        public Criteria andSortNumberIsNotNull() {
            addCriterion("SortNumber is not null");
            return (Criteria) this;
        }

        public Criteria andSortNumberEqualTo(Integer value) {
            addCriterion("SortNumber =", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberNotEqualTo(Integer value) {
            addCriterion("SortNumber <>", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberGreaterThan(Integer value) {
            addCriterion("SortNumber >", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("SortNumber >=", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberLessThan(Integer value) {
            addCriterion("SortNumber <", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberLessThanOrEqualTo(Integer value) {
            addCriterion("SortNumber <=", value, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberIn(List<Integer> values) {
            addCriterion("SortNumber in", values, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberNotIn(List<Integer> values) {
            addCriterion("SortNumber not in", values, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberBetween(Integer value1, Integer value2) {
            addCriterion("SortNumber between", value1, value2, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andSortNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("SortNumber not between", value1, value2, "sortNumber");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageIsNull() {
            addCriterion("IsDryStorage is null");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageIsNotNull() {
            addCriterion("IsDryStorage is not null");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageEqualTo(Boolean value) {
            addCriterion("IsDryStorage =", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageNotEqualTo(Boolean value) {
            addCriterion("IsDryStorage <>", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageGreaterThan(Boolean value) {
            addCriterion("IsDryStorage >", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IsDryStorage >=", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageLessThan(Boolean value) {
            addCriterion("IsDryStorage <", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageLessThanOrEqualTo(Boolean value) {
            addCriterion("IsDryStorage <=", value, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageIn(List<Boolean> values) {
            addCriterion("IsDryStorage in", values, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageNotIn(List<Boolean> values) {
            addCriterion("IsDryStorage not in", values, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageBetween(Boolean value1, Boolean value2) {
            addCriterion("IsDryStorage between", value1, value2, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andIsDryStorageNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IsDryStorage not between", value1, value2, "isDryStorage");
            return (Criteria) this;
        }

        public Criteria andPosXIsNull() {
            addCriterion("PosX is null");
            return (Criteria) this;
        }

        public Criteria andPosXIsNotNull() {
            addCriterion("PosX is not null");
            return (Criteria) this;
        }

        public Criteria andPosXEqualTo(Double value) {
            addCriterion("PosX =", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXNotEqualTo(Double value) {
            addCriterion("PosX <>", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXGreaterThan(Double value) {
            addCriterion("PosX >", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXGreaterThanOrEqualTo(Double value) {
            addCriterion("PosX >=", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXLessThan(Double value) {
            addCriterion("PosX <", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXLessThanOrEqualTo(Double value) {
            addCriterion("PosX <=", value, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXIn(List<Double> values) {
            addCriterion("PosX in", values, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXNotIn(List<Double> values) {
            addCriterion("PosX not in", values, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXBetween(Double value1, Double value2) {
            addCriterion("PosX between", value1, value2, "posX");
            return (Criteria) this;
        }

        public Criteria andPosXNotBetween(Double value1, Double value2) {
            addCriterion("PosX not between", value1, value2, "posX");
            return (Criteria) this;
        }

        public Criteria andPosYIsNull() {
            addCriterion("PosY is null");
            return (Criteria) this;
        }

        public Criteria andPosYIsNotNull() {
            addCriterion("PosY is not null");
            return (Criteria) this;
        }

        public Criteria andPosYEqualTo(Double value) {
            addCriterion("PosY =", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYNotEqualTo(Double value) {
            addCriterion("PosY <>", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYGreaterThan(Double value) {
            addCriterion("PosY >", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYGreaterThanOrEqualTo(Double value) {
            addCriterion("PosY >=", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYLessThan(Double value) {
            addCriterion("PosY <", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYLessThanOrEqualTo(Double value) {
            addCriterion("PosY <=", value, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYIn(List<Double> values) {
            addCriterion("PosY in", values, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYNotIn(List<Double> values) {
            addCriterion("PosY not in", values, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYBetween(Double value1, Double value2) {
            addCriterion("PosY between", value1, value2, "posY");
            return (Criteria) this;
        }

        public Criteria andPosYNotBetween(Double value1, Double value2) {
            addCriterion("PosY not between", value1, value2, "posY");
            return (Criteria) this;
        }

        public Criteria andSizeXIsNull() {
            addCriterion("SizeX is null");
            return (Criteria) this;
        }

        public Criteria andSizeXIsNotNull() {
            addCriterion("SizeX is not null");
            return (Criteria) this;
        }

        public Criteria andSizeXEqualTo(Double value) {
            addCriterion("SizeX =", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXNotEqualTo(Double value) {
            addCriterion("SizeX <>", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXGreaterThan(Double value) {
            addCriterion("SizeX >", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXGreaterThanOrEqualTo(Double value) {
            addCriterion("SizeX >=", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXLessThan(Double value) {
            addCriterion("SizeX <", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXLessThanOrEqualTo(Double value) {
            addCriterion("SizeX <=", value, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXIn(List<Double> values) {
            addCriterion("SizeX in", values, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXNotIn(List<Double> values) {
            addCriterion("SizeX not in", values, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXBetween(Double value1, Double value2) {
            addCriterion("SizeX between", value1, value2, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeXNotBetween(Double value1, Double value2) {
            addCriterion("SizeX not between", value1, value2, "sizeX");
            return (Criteria) this;
        }

        public Criteria andSizeYIsNull() {
            addCriterion("SizeY is null");
            return (Criteria) this;
        }

        public Criteria andSizeYIsNotNull() {
            addCriterion("SizeY is not null");
            return (Criteria) this;
        }

        public Criteria andSizeYEqualTo(Double value) {
            addCriterion("SizeY =", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYNotEqualTo(Double value) {
            addCriterion("SizeY <>", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYGreaterThan(Double value) {
            addCriterion("SizeY >", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYGreaterThanOrEqualTo(Double value) {
            addCriterion("SizeY >=", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYLessThan(Double value) {
            addCriterion("SizeY <", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYLessThanOrEqualTo(Double value) {
            addCriterion("SizeY <=", value, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYIn(List<Double> values) {
            addCriterion("SizeY in", values, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYNotIn(List<Double> values) {
            addCriterion("SizeY not in", values, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYBetween(Double value1, Double value2) {
            addCriterion("SizeY between", value1, value2, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeYNotBetween(Double value1, Double value2) {
            addCriterion("SizeY not between", value1, value2, "sizeY");
            return (Criteria) this;
        }

        public Criteria andSizeZIsNull() {
            addCriterion("SizeZ is null");
            return (Criteria) this;
        }

        public Criteria andSizeZIsNotNull() {
            addCriterion("SizeZ is not null");
            return (Criteria) this;
        }

        public Criteria andSizeZEqualTo(Double value) {
            addCriterion("SizeZ =", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZNotEqualTo(Double value) {
            addCriterion("SizeZ <>", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZGreaterThan(Double value) {
            addCriterion("SizeZ >", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZGreaterThanOrEqualTo(Double value) {
            addCriterion("SizeZ >=", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZLessThan(Double value) {
            addCriterion("SizeZ <", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZLessThanOrEqualTo(Double value) {
            addCriterion("SizeZ <=", value, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZIn(List<Double> values) {
            addCriterion("SizeZ in", values, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZNotIn(List<Double> values) {
            addCriterion("SizeZ not in", values, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZBetween(Double value1, Double value2) {
            addCriterion("SizeZ between", value1, value2, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andSizeZNotBetween(Double value1, Double value2) {
            addCriterion("SizeZ not between", value1, value2, "sizeZ");
            return (Criteria) this;
        }

        public Criteria andAngleIsNull() {
            addCriterion("Angle is null");
            return (Criteria) this;
        }

        public Criteria andAngleIsNotNull() {
            addCriterion("Angle is not null");
            return (Criteria) this;
        }

        public Criteria andAngleEqualTo(Double value) {
            addCriterion("Angle =", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleNotEqualTo(Double value) {
            addCriterion("Angle <>", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleGreaterThan(Double value) {
            addCriterion("Angle >", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleGreaterThanOrEqualTo(Double value) {
            addCriterion("Angle >=", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleLessThan(Double value) {
            addCriterion("Angle <", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleLessThanOrEqualTo(Double value) {
            addCriterion("Angle <=", value, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleIn(List<Double> values) {
            addCriterion("Angle in", values, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleNotIn(List<Double> values) {
            addCriterion("Angle not in", values, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleBetween(Double value1, Double value2) {
            addCriterion("Angle between", value1, value2, "angle");
            return (Criteria) this;
        }

        public Criteria andAngleNotBetween(Double value1, Double value2) {
            addCriterion("Angle not between", value1, value2, "angle");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDIsNull() {
            addCriterion("ParentStockLocationID is null");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDIsNotNull() {
            addCriterion("ParentStockLocationID is not null");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDEqualTo(String value) {
            addCriterion("ParentStockLocationID =", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDNotEqualTo(String value) {
            addCriterion("ParentStockLocationID <>", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDGreaterThan(String value) {
            addCriterion("ParentStockLocationID >", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDGreaterThanOrEqualTo(String value) {
            addCriterion("ParentStockLocationID >=", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDLessThan(String value) {
            addCriterion("ParentStockLocationID <", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDLessThanOrEqualTo(String value) {
            addCriterion("ParentStockLocationID <=", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDLike(String value) {
            addCriterion("ParentStockLocationID like", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDNotLike(String value) {
            addCriterion("ParentStockLocationID not like", value, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDIn(List<String> values) {
            addCriterion("ParentStockLocationID in", values, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDNotIn(List<String> values) {
            addCriterion("ParentStockLocationID not in", values, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDBetween(String value1, String value2) {
            addCriterion("ParentStockLocationID between", value1, value2, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andParentStockLocationIDNotBetween(String value1, String value2) {
            addCriterion("ParentStockLocationID not between", value1, value2, "parentStockLocationID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDIsNull() {
            addCriterion("StockResourceBaseID is null");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDIsNotNull() {
            addCriterion("StockResourceBaseID is not null");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDEqualTo(String value) {
            addCriterion("StockResourceBaseID =", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDNotEqualTo(String value) {
            addCriterion("StockResourceBaseID <>", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDGreaterThan(String value) {
            addCriterion("StockResourceBaseID >", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDGreaterThanOrEqualTo(String value) {
            addCriterion("StockResourceBaseID >=", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDLessThan(String value) {
            addCriterion("StockResourceBaseID <", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDLessThanOrEqualTo(String value) {
            addCriterion("StockResourceBaseID <=", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDLike(String value) {
            addCriterion("StockResourceBaseID like", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDNotLike(String value) {
            addCriterion("StockResourceBaseID not like", value, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDIn(List<String> values) {
            addCriterion("StockResourceBaseID in", values, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDNotIn(List<String> values) {
            addCriterion("StockResourceBaseID not in", values, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDBetween(String value1, String value2) {
            addCriterion("StockResourceBaseID between", value1, value2, "stockResourceBaseID");
            return (Criteria) this;
        }

        public Criteria andStockResourceBaseIDNotBetween(String value1, String value2) {
            addCriterion("StockResourceBaseID not between", value1, value2, "stockResourceBaseID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table StockLocations
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 21 13:51:24 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table StockLocations
     *
     * @mbggenerated Mon Nov 21 13:51:24 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}