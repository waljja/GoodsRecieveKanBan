<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ht.mappergenerator.mapper108.StockLocationsMapper">
  <resultMap id="BaseResultMap" type="ht.model.model108.StockLocations">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    <id column="ID" jdbcType="CHAR" property="ID" />
    <result column="SortNumber" jdbcType="INTEGER" property="sortNumber" />
    <result column="IsDryStorage" jdbcType="BIT" property="isDryStorage" />
    <result column="PosX" jdbcType="DOUBLE" property="posX" />
    <result column="PosY" jdbcType="DOUBLE" property="posY" />
    <result column="SizeX" jdbcType="DOUBLE" property="sizeX" />
    <result column="SizeY" jdbcType="DOUBLE" property="sizeY" />
    <result column="SizeZ" jdbcType="DOUBLE" property="sizeZ" />
    <result column="Angle" jdbcType="DOUBLE" property="angle" />
    <result column="ParentStockLocationID" jdbcType="CHAR" property="parentStockLocationID" />
    <result column="StockResourceBaseID" jdbcType="CHAR" property="stockResourceBaseID" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="ht.model.model108.StockLocationsWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    <result column="Name" jdbcType="LONGVARCHAR" property="name" />
    <result column="Identifier" jdbcType="LONGVARCHAR" property="identifier" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    ID, SortNumber, IsDryStorage, PosX, PosY, SizeX, SizeY, SizeZ, Angle, ParentStockLocationID, 
    StockResourceBaseID
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    Name, Identifier
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="ht.model.model108.StockLocationsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from StockLocations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="ht.model.model108.StockLocationsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from StockLocations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from StockLocations
    where ID = #{ID,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    delete from StockLocations
    where ID = #{ID,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="ht.model.model108.StockLocationsExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    delete from StockLocations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ht.model.model108.StockLocationsWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    insert into StockLocations (ID, SortNumber, IsDryStorage, 
      PosX, PosY, SizeX, SizeY, 
      SizeZ, Angle, ParentStockLocationID, 
      StockResourceBaseID, Name, Identifier
      )
    values (#{ID,jdbcType=CHAR}, #{sortNumber,jdbcType=INTEGER}, #{isDryStorage,jdbcType=BIT}, 
      #{posX,jdbcType=DOUBLE}, #{posY,jdbcType=DOUBLE}, #{sizeX,jdbcType=DOUBLE}, #{sizeY,jdbcType=DOUBLE}, 
      #{sizeZ,jdbcType=DOUBLE}, #{angle,jdbcType=DOUBLE}, #{parentStockLocationID,jdbcType=CHAR}, 
      #{stockResourceBaseID,jdbcType=CHAR}, #{name,jdbcType=LONGVARCHAR}, #{identifier,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ht.model.model108.StockLocationsWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    insert into StockLocations
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        ID,
      </if>
      <if test="sortNumber != null">
        SortNumber,
      </if>
      <if test="isDryStorage != null">
        IsDryStorage,
      </if>
      <if test="posX != null">
        PosX,
      </if>
      <if test="posY != null">
        PosY,
      </if>
      <if test="sizeX != null">
        SizeX,
      </if>
      <if test="sizeY != null">
        SizeY,
      </if>
      <if test="sizeZ != null">
        SizeZ,
      </if>
      <if test="angle != null">
        Angle,
      </if>
      <if test="parentStockLocationID != null">
        ParentStockLocationID,
      </if>
      <if test="stockResourceBaseID != null">
        StockResourceBaseID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="identifier != null">
        Identifier,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        #{ID,jdbcType=CHAR},
      </if>
      <if test="sortNumber != null">
        #{sortNumber,jdbcType=INTEGER},
      </if>
      <if test="isDryStorage != null">
        #{isDryStorage,jdbcType=BIT},
      </if>
      <if test="posX != null">
        #{posX,jdbcType=DOUBLE},
      </if>
      <if test="posY != null">
        #{posY,jdbcType=DOUBLE},
      </if>
      <if test="sizeX != null">
        #{sizeX,jdbcType=DOUBLE},
      </if>
      <if test="sizeY != null">
        #{sizeY,jdbcType=DOUBLE},
      </if>
      <if test="sizeZ != null">
        #{sizeZ,jdbcType=DOUBLE},
      </if>
      <if test="angle != null">
        #{angle,jdbcType=DOUBLE},
      </if>
      <if test="parentStockLocationID != null">
        #{parentStockLocationID,jdbcType=CHAR},
      </if>
      <if test="stockResourceBaseID != null">
        #{stockResourceBaseID,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ht.model.model108.StockLocationsExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    select count(*) from StockLocations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    <set>
      <if test="record.ID != null">
        ID = #{record.ID,jdbcType=CHAR},
      </if>
      <if test="record.sortNumber != null">
        SortNumber = #{record.sortNumber,jdbcType=INTEGER},
      </if>
      <if test="record.isDryStorage != null">
        IsDryStorage = #{record.isDryStorage,jdbcType=BIT},
      </if>
      <if test="record.posX != null">
        PosX = #{record.posX,jdbcType=DOUBLE},
      </if>
      <if test="record.posY != null">
        PosY = #{record.posY,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeX != null">
        SizeX = #{record.sizeX,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeY != null">
        SizeY = #{record.sizeY,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeZ != null">
        SizeZ = #{record.sizeZ,jdbcType=DOUBLE},
      </if>
      <if test="record.angle != null">
        Angle = #{record.angle,jdbcType=DOUBLE},
      </if>
      <if test="record.parentStockLocationID != null">
        ParentStockLocationID = #{record.parentStockLocationID,jdbcType=CHAR},
      </if>
      <if test="record.stockResourceBaseID != null">
        StockResourceBaseID = #{record.stockResourceBaseID,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.identifier != null">
        Identifier = #{record.identifier,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    set ID = #{record.ID,jdbcType=CHAR},
      SortNumber = #{record.sortNumber,jdbcType=INTEGER},
      IsDryStorage = #{record.isDryStorage,jdbcType=BIT},
      PosX = #{record.posX,jdbcType=DOUBLE},
      PosY = #{record.posY,jdbcType=DOUBLE},
      SizeX = #{record.sizeX,jdbcType=DOUBLE},
      SizeY = #{record.sizeY,jdbcType=DOUBLE},
      SizeZ = #{record.sizeZ,jdbcType=DOUBLE},
      Angle = #{record.angle,jdbcType=DOUBLE},
      ParentStockLocationID = #{record.parentStockLocationID,jdbcType=CHAR},
      StockResourceBaseID = #{record.stockResourceBaseID,jdbcType=CHAR},
      Name = #{record.name,jdbcType=LONGVARCHAR},
      Identifier = #{record.identifier,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    set ID = #{record.ID,jdbcType=CHAR},
      SortNumber = #{record.sortNumber,jdbcType=INTEGER},
      IsDryStorage = #{record.isDryStorage,jdbcType=BIT},
      PosX = #{record.posX,jdbcType=DOUBLE},
      PosY = #{record.posY,jdbcType=DOUBLE},
      SizeX = #{record.sizeX,jdbcType=DOUBLE},
      SizeY = #{record.sizeY,jdbcType=DOUBLE},
      SizeZ = #{record.sizeZ,jdbcType=DOUBLE},
      Angle = #{record.angle,jdbcType=DOUBLE},
      ParentStockLocationID = #{record.parentStockLocationID,jdbcType=CHAR},
      StockResourceBaseID = #{record.stockResourceBaseID,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ht.model.model108.StockLocationsWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    <set>
      <if test="sortNumber != null">
        SortNumber = #{sortNumber,jdbcType=INTEGER},
      </if>
      <if test="isDryStorage != null">
        IsDryStorage = #{isDryStorage,jdbcType=BIT},
      </if>
      <if test="posX != null">
        PosX = #{posX,jdbcType=DOUBLE},
      </if>
      <if test="posY != null">
        PosY = #{posY,jdbcType=DOUBLE},
      </if>
      <if test="sizeX != null">
        SizeX = #{sizeX,jdbcType=DOUBLE},
      </if>
      <if test="sizeY != null">
        SizeY = #{sizeY,jdbcType=DOUBLE},
      </if>
      <if test="sizeZ != null">
        SizeZ = #{sizeZ,jdbcType=DOUBLE},
      </if>
      <if test="angle != null">
        Angle = #{angle,jdbcType=DOUBLE},
      </if>
      <if test="parentStockLocationID != null">
        ParentStockLocationID = #{parentStockLocationID,jdbcType=CHAR},
      </if>
      <if test="stockResourceBaseID != null">
        StockResourceBaseID = #{stockResourceBaseID,jdbcType=CHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="identifier != null">
        Identifier = #{identifier,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{ID,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="ht.model.model108.StockLocationsWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    set SortNumber = #{sortNumber,jdbcType=INTEGER},
      IsDryStorage = #{isDryStorage,jdbcType=BIT},
      PosX = #{posX,jdbcType=DOUBLE},
      PosY = #{posY,jdbcType=DOUBLE},
      SizeX = #{sizeX,jdbcType=DOUBLE},
      SizeY = #{sizeY,jdbcType=DOUBLE},
      SizeZ = #{sizeZ,jdbcType=DOUBLE},
      Angle = #{angle,jdbcType=DOUBLE},
      ParentStockLocationID = #{parentStockLocationID,jdbcType=CHAR},
      StockResourceBaseID = #{stockResourceBaseID,jdbcType=CHAR},
      Name = #{name,jdbcType=LONGVARCHAR},
      Identifier = #{identifier,jdbcType=LONGVARCHAR}
    where ID = #{ID,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ht.model.model108.StockLocations">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Nov 21 13:51:24 CST 2022.
    -->
    update StockLocations
    set SortNumber = #{sortNumber,jdbcType=INTEGER},
      IsDryStorage = #{isDryStorage,jdbcType=BIT},
      PosX = #{posX,jdbcType=DOUBLE},
      PosY = #{posY,jdbcType=DOUBLE},
      SizeX = #{sizeX,jdbcType=DOUBLE},
      SizeY = #{sizeY,jdbcType=DOUBLE},
      SizeZ = #{sizeZ,jdbcType=DOUBLE},
      Angle = #{angle,jdbcType=DOUBLE},
      ParentStockLocationID = #{parentStockLocationID,jdbcType=CHAR},
      StockResourceBaseID = #{stockResourceBaseID,jdbcType=CHAR}
    where ID = #{ID,jdbcType=CHAR}
  </update>
</mapper>